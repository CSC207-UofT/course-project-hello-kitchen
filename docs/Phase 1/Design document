# Design Document
## Major design decisions
## Clean Architecture
## SOLID
- Single Responsibility Principle: The majority of our classes follow the single responsibility principle since they only have few methods that are clearly inseparable.
- Open/Closed Principle: All of our classes can be extended and be modified freely. For example, we can freely add new 
methods.
- Liskov Substitution Principle: There's no hierarchies in our program.
- Interface Segregation Principle: Public interfaces of our classes are all reasonable. No single irrelevant part that the program has to implement.
- Dependency Inversion Principle:
## Design patterns
Adapter pattern: We used this design pattern for our database